@page "/"
@using LibraryApp.Data
@using LibraryApp.Data.Models
@inject IMongoRepository<Book> BookRepository

<PageTitle>Index</PageTitle>


<AuthorizeView>
    <Authorized>
        <h2>Hello, @context.User.Identity?.Name</h2>
    </Authorized>
    <NotAuthorized>
        <h2>Hello, visitor.</h2>
    </NotAuthorized>
</AuthorizeView>

<h1>Welcome to the Library</h1>

<h3>What awaits you...</h3>

<RadzenCard Class="rz-shadow-2">
    <div class="row">
        <div class="my-3 my-lg-5">
            <RadzenArcGauge Style="width: 100%; height: 250px;">
                <RadzenArcGaugeScale Step="20" Min="0" Max="60" MinorStep="2" Radius="1.5" TickPosition=@(GaugeTickPosition.None) Y="0.9" Margin="0">
                    <RadzenArcGaugeScaleValue Value=@value ShowValue=@true>
                        <Template Context="pointer">
                            <h4>
                                @pointer.Value Books
                            </h4>
                        </Template>
                    </RadzenArcGaugeScaleValue>
                </RadzenArcGaugeScale>
            </RadzenArcGauge>
        </div>
    </div>
</RadzenCard>

@code
{
    bool showValue = true;
    double value;
    IEnumerable<GaugeTickPosition> tickPositions = Enum.GetValues(typeof(GaugeTickPosition)).Cast<GaugeTickPosition>();
    GaugeTickPosition tickPosition = GaugeTickPosition.Outside;



    protected override Task OnInitializedAsync()
    {
        value = BookRepository.AsQueryable().Count();
        return Task.CompletedTask;
    }
}
